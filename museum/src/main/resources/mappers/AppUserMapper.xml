<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 绑定到指定接口 -->        
<mapper namespace="com.example.museum.mapper.AppUserMapper">
    <!-- 结果映射,前者为数据库表列名,后者为实体类属性 -->
    <resultMap id="BaseResultMap" type="com.example.museum.model.AppUser">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="isFrozen" jdbcType="TINYINT" property="isFrozen"/>
        <result column="isAdmin" jdbcType="TINYINT" property="isAdmin"/>
    </resultMap>
    <!-- ID需要与接口中定义的方法名一致 -->
    <select id="getAllUsers" resultType="AppUser" resultMap="BaseResultMap">
        SELECT * FROM app_user
    </select>
    <select id="getAllUsersByCondition" resultMap="BaseResultMap">
        SELECT * 
        FROM app_user
        <where>
            <if test="id != null">
                AND id >= #{id}
            </if>
            <if test="account != null and account != ''">
                AND account = #{account}
            </if>
        </where>
    </select>
    <select id = "findByUsername" resultMap = "BaseResultMap">
        select * from app_user where account = #{account}
    </select>
    <select id="findByEmail" resultMap = "BaseResultMap">
        select * from app_user where email = #{email}
    </select>

    <insert id="addOneUser" useGeneratedKeys="true" keyProperty="id">
        insert into app_user(account,password,email,isAdmin,isFrozen)
        values (#{account},#{password},#{email},#{isAdmin},#{isFrozen})
    </insert>
    <update id="updateOneUser">
        update app_user set account = #{account}, password = #{password}, email=#{email},isAdmin=#{isAdmin},isFrozen=#{isFrozen} where id = #{id}
    </update>
    
</mapper>